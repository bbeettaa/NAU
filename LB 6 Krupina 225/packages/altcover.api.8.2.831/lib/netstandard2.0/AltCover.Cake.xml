<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AltCover.Cake</name>
    </assembly>
    <members>
        <member name="T:AltCover.Cake.Command">
            <summary>
            A C#-friendly expression of the core API to drive the instrumentation and collection process.
            </summary>
        </member>
        <member name="M:AltCover.Cake.Command.Prepare(Cake.Core.ICakeContext,AltCover.Abstract.IPrepareOptions,AltCover.Abstract.ILoggingOptions)">
            <summary>
            <para>Performs the instrumentation phase of the coverage operation.</para>
            <para>This method is a `[CakeMethodAlias]` extension method on the Cake build script context.</para>
            </summary>
            <param name="context">The Cake build script context; a `this` parameter</param>
            <param name="prepareArgs">C# definition of the instrumentation (and optional execution) process.</param>
            <param name="log">[Optional]C# definition of the process logging; if no logging support is supplied, then Cake logging at an appropriate severity is used.</param>
            <returns>The integer return code for the instrumentation process.</returns>
        </member>
        <member name="M:AltCover.Cake.Command.Collect(Cake.Core.ICakeContext,AltCover.Abstract.ICollectOptions,AltCover.Abstract.ILoggingOptions)">
            <summary>
            <para>Performs the collection phase of the coverage operation.</para>
            <para>This method is a `[CakeMethodAlias]` extension method on the Cake build script context.</para>
            </summary>
            <param name="context">The Cake build script context; a `this` parameter</param>
            <param name="collectArgs">C# definition of the collection (and optional execution) process.</param>
            <param name="log">[Optional]C# efinition of the process logging; if no logging support is supplied, then Cake logging at an appropriate severity is used.</param>
            <returns>The integer return code for the collection process.</returns>
        </member>
        <member name="M:AltCover.Cake.Command.ImportModule(Cake.Core.ICakeContext)">
            <summary>
            <para>Performs the `AltCover ImportModule` operation.</para>
            <para>This method is a `[CakeMethodAlias]` extension method on the Cake build script context.</para>
            </summary>
            <param name="context">The Cake build script context; a `this` parameter</param>
            <returns>The PowerShell Import-Module command to access the AltCover cmdlets</returns>
        </member>
        <member name="M:AltCover.Cake.Command.Version(Cake.Core.ICakeContext)">
            <summary>
            <para>Performs the `AltCover Version` operation.</para>
            <para>This method is a `[CakeMethodAlias]` extension method on the Cake build script context.</para>
            </summary>
            <param name="context">The Cake build script context; a `this` parameter</param>
            <returns>The AltCover built version</returns>
        </member>
        <member name="T:AltCover.Cake.CoverageSettings">
            <summary>
            Combines the coverage process arguments into one object for use with `dotnet test`
            </summary>
        </member>
        <member name="P:AltCover.Cake.CoverageSettings.PreparationPhase">
            <summary>
            Gets or sets the parameters for the preparation phase
            </summary>
        </member>
        <member name="P:AltCover.Cake.CoverageSettings.CollectionPhase">
            <summary>
            Gets or sets the parameters for the collection phase
            </summary>
        </member>
        <member name="P:AltCover.Cake.CoverageSettings.Options">
            <summary>
             Gets or sets the other command line options for the operation
            </summary>
        </member>
        <member name="M:AltCover.Cake.CoverageSettings.WhatIf">
            <summary>
            Provides simple validation support for the options; of necessity, it runs in the "before preparation" state.
            </summary>
            <returns>A validated command line containing any errors, or an empty one if all is ok</returns>
        </member>
        <member name="M:AltCover.Cake.CoverageSettings.Customize">
            <summary>
            <para>For applying these settings in a pipeline; returns a delegate to transform a `ProcessArgumentBuilder` based on the current settings</para>
            </summary>
            <returns>`ProcessArgumentBuilder` to `ProcessArgumentBuilder` transform</returns>
        </member>
        <member name="M:AltCover.Cake.CoverageSettings.Concatenate(System.Func{Cake.Core.IO.ProcessArgumentBuilder,Cake.Core.IO.ProcessArgumentBuilder})">
            <summary>
            <para>For applying these settings in a pipeline; returns a delegate to transform a `ProcessArgumentBuilder` based on the current settings,
            combined with the input value</para>
            </summary>
            <param name="customIn">Another `ProcessArgumentBuilder` to `ProcessArgumentBuilder` transform to apply before the `AltCover` one.</param>
            <returns>A concatenated `ProcessArgumentBuilder` to `ProcessArgumentBuilder` transform</returns>
        </member>
        <member name="T:AltCover.Cake.DotNet">
            <summary>
            Extensions for `dotnet`.  This class is a `[CakeAliasCategory("DotNetCore")]`
            </summary>
        </member>
        <member name="M:AltCover.Cake.DotNet.DotNetCoreTest(Cake.Core.ICakeContext,Cake.Core.IO.FilePath,Cake.Common.Tools.DotNetCore.Test.DotNetCoreTestSettings,AltCover.Cake.CoverageSettings)">
            <summary>
            <para>Hooks into the Cake wrapper for `dotnet test` and injects the AltCover command line arguments as specified.</para>
            <para>Equivalent to</para>
            <code>
            settings.ArgumentCustomization = altcover.Concatenate(settings.ArgumentCustomization);
            context.DotNetCoreTest(project.FullPath, settings);
            </code>
            <para>This method is a `[CakeMethodAlias]` extension method on `ICakeContext`, and `[CakeAliasCategory("Test")]`.</para>
            </summary>
            <param name="context">The Cake build script `ICakeContext`; a `this` parameter</param>
            <param name="project">The project to test as a `FilePath`</param>
            <param name="testSettings">The `DotNetCoreTestSettings` for the test</param>
            <param name="coverageSettings">The `CoverageSettings` for the test instrumentation</param>
        </member>
    </members>
</doc>
